/* tslint:disable */
/* eslint-disable */
/**
 * Mantle API
 * A static API for blogs that transforms markdown files with frontmatter into JSON endpoints
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  MainCategoryTreeNode,
  MainErrorResponse,
  MainPostPreview,
} from '../models/index';
import {
    MainCategoryTreeNodeFromJSON,
    MainCategoryTreeNodeToJSON,
    MainErrorResponseFromJSON,
    MainErrorResponseToJSON,
    MainPostPreviewFromJSON,
    MainPostPreviewToJSON,
} from '../models/index';

export interface CategoriesGetRequest {
    category?: string;
}

/**
 * 
 */
export class CategoriesApi extends runtime.BaseAPI {

    /**
     * Get all categories or filter by specific category
     * Get all categories
     */
    async categoriesGetRaw(requestParameters: CategoriesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<MainPostPreview>>> {
        const queryParameters: any = {};

        if (requestParameters['category'] != null) {
            queryParameters['category'] = requestParameters['category'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/categories`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(MainPostPreviewFromJSON));
    }

    /**
     * Get all categories or filter by specific category
     * Get all categories
     */
    async categoriesGet(requestParameters: CategoriesGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<MainPostPreview>> {
        const response = await this.categoriesGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get hierarchical category tree structure
     * Get category tree
     */
    async categoriesTreeJsonGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<MainCategoryTreeNode>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/categories/tree.json`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(MainCategoryTreeNodeFromJSON));
    }

    /**
     * Get hierarchical category tree structure
     * Get category tree
     */
    async categoriesTreeJsonGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<MainCategoryTreeNode>> {
        const response = await this.categoriesTreeJsonGetRaw(initOverrides);
        return await response.value();
    }

}
