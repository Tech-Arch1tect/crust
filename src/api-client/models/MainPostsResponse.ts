/* tslint:disable */
/* eslint-disable */
/**
 * Mantle API
 * A static API for blogs that transforms markdown files with frontmatter into JSON endpoints
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MainPost } from './MainPost';
import {
    MainPostFromJSON,
    MainPostFromJSONTyped,
    MainPostToJSON,
    MainPostToJSONTyped,
} from './MainPost';

/**
 * Paginated response containing posts and pagination metadata
 * @export
 * @interface MainPostsResponse
 */
export interface MainPostsResponse {
    /**
     * 
     * @type {boolean}
     * @memberof MainPostsResponse
     */
    hasNext?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MainPostsResponse
     */
    hasPrevious?: boolean;
    /**
     * 
     * @type {number}
     * @memberof MainPostsResponse
     */
    nextPage?: number;
    /**
     * 
     * @type {number}
     * @memberof MainPostsResponse
     */
    page?: number;
    /**
     * 
     * @type {Array<MainPost>}
     * @memberof MainPostsResponse
     */
    posts?: Array<MainPost>;
    /**
     * 
     * @type {number}
     * @memberof MainPostsResponse
     */
    prevPage?: number;
    /**
     * 
     * @type {number}
     * @memberof MainPostsResponse
     */
    totalItems?: number;
    /**
     * 
     * @type {number}
     * @memberof MainPostsResponse
     */
    totalPages?: number;
}

/**
 * Check if a given object implements the MainPostsResponse interface.
 */
export function instanceOfMainPostsResponse(value: object): value is MainPostsResponse {
    return true;
}

export function MainPostsResponseFromJSON(json: any): MainPostsResponse {
    return MainPostsResponseFromJSONTyped(json, false);
}

export function MainPostsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MainPostsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'hasNext': json['hasNext'] == null ? undefined : json['hasNext'],
        'hasPrevious': json['hasPrevious'] == null ? undefined : json['hasPrevious'],
        'nextPage': json['nextPage'] == null ? undefined : json['nextPage'],
        'page': json['page'] == null ? undefined : json['page'],
        'posts': json['posts'] == null ? undefined : ((json['posts'] as Array<any>).map(MainPostFromJSON)),
        'prevPage': json['prevPage'] == null ? undefined : json['prevPage'],
        'totalItems': json['totalItems'] == null ? undefined : json['totalItems'],
        'totalPages': json['totalPages'] == null ? undefined : json['totalPages'],
    };
}

export function MainPostsResponseToJSON(json: any): MainPostsResponse {
    return MainPostsResponseToJSONTyped(json, false);
}

export function MainPostsResponseToJSONTyped(value?: MainPostsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'hasNext': value['hasNext'],
        'hasPrevious': value['hasPrevious'],
        'nextPage': value['nextPage'],
        'page': value['page'],
        'posts': value['posts'] == null ? undefined : ((value['posts'] as Array<any>).map(MainPostToJSON)),
        'prevPage': value['prevPage'],
        'totalItems': value['totalItems'],
        'totalPages': value['totalPages'],
    };
}

