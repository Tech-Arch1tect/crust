/* tslint:disable */
/* eslint-disable */
/**
 * Mantle API
 * A static API for blogs that transforms markdown files with frontmatter into JSON endpoints
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MainFrontMatter } from './MainFrontMatter';
import {
    MainFrontMatterFromJSON,
    MainFrontMatterFromJSONTyped,
    MainFrontMatterToJSON,
    MainFrontMatterToJSONTyped,
} from './MainFrontMatter';

/**
 * Complete blog post including markdown content and frontmatter
 * @export
 * @interface MainPost
 */
export interface MainPost {
    /**
     * 
     * @type {string}
     * @memberof MainPost
     */
    excerpt?: string;
    /**
     * 
     * @type {MainFrontMatter}
     * @memberof MainPost
     */
    frontmatter?: MainFrontMatter;
    /**
     * 
     * @type {string}
     * @memberof MainPost
     */
    markdown?: string;
    /**
     * 
     * @type {number}
     * @memberof MainPost
     */
    readingTime?: number;
}

/**
 * Check if a given object implements the MainPost interface.
 */
export function instanceOfMainPost(value: object): value is MainPost {
    return true;
}

export function MainPostFromJSON(json: any): MainPost {
    return MainPostFromJSONTyped(json, false);
}

export function MainPostFromJSONTyped(json: any, ignoreDiscriminator: boolean): MainPost {
    if (json == null) {
        return json;
    }
    return {
        
        'excerpt': json['excerpt'] == null ? undefined : json['excerpt'],
        'frontmatter': json['frontmatter'] == null ? undefined : MainFrontMatterFromJSON(json['frontmatter']),
        'markdown': json['markdown'] == null ? undefined : json['markdown'],
        'readingTime': json['readingTime'] == null ? undefined : json['readingTime'],
    };
}

export function MainPostToJSON(json: any): MainPost {
    return MainPostToJSONTyped(json, false);
}

export function MainPostToJSONTyped(value?: MainPost | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'excerpt': value['excerpt'],
        'frontmatter': MainFrontMatterToJSON(value['frontmatter']),
        'markdown': value['markdown'],
        'readingTime': value['readingTime'],
    };
}

